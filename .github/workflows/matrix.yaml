name: matrix
on:
  schedule:
    # every day at 5am UTC
    - cron: '0 5 * * *'
  workflow_dispatch:

jobs:

  build:
    permissions:
      packages: write # to write to ghcr.io
      contents: write # to commit to the repo (examples)
    
    runs-on: "ubuntu-latest" # ${{ matrix.arch.runner }}
    strategy:
      fail-fast: false # let other jobs try to complete if one fails
      matrix:
        include:
          - { distro: rocky, id: "rocky-8", env: { RELEASE: "8" } }
          - { distro: rocky, id: "rocky-9", env: { RELEASE: "9" } }
          - { distro: fedora, id: "fedora-39", env: { RELEASE: "39" } }
          - { distro: debian, id: "debian-bookworm", env: { RELEASE: "bookworm" } }
          - { distro: ubuntu, id: "ubuntu-jammy", env: { RELEASE: "jammy" } }
          - { distro: ubuntu, id: "ubuntu-noble", env: { RELEASE: "noble" } }
          - { distro: armbian, id: "armbian-bookworm-edge", env: { RELEASE: "bookworm", BRANCH: "edge", EXTRA_RELEASE: "" }, skipCache: true }
          - { distro: armbian, id: "armbian-bookworm-edge-k8s-1.28", env: { RELEASE: "bookworm", BRANCH: "edge", EXTRA_RELEASE: "k8s-1.28" }, skipCache: true }
          - { distro: armbian, id: "armbian-bookworm-ddk-k8s-1.28", env: { RELEASE: "bookworm", BRANCH: "ddk", EXTRA_RELEASE: "k8s-1.28" }, skipCache: true }
          - { distro: armbian, id: "armbian-trixie-edge", env: { RELEASE: "trixie", BRANCH: "edge", EXTRA_RELEASE: "" }, skipCache: true }
          - { distro: armbian, id: "armbian-trixie-edge-k8s-1.28", env: { RELEASE: "trixie", BRANCH: "edge", EXTRA_RELEASE: "k8s-1.28" }, skipCache: true }
          - { distro: armbian, id: "armbian-trixie-ddk-k8s-1.28", env: { RELEASE: "trixie", BRANCH: "ddk", EXTRA_RELEASE: "k8s-1.28" }, skipCache: true }
          - { distro: armbian, id: "armbian-jammy-edge-k8s-1.28", env: { RELEASE: "jammy", BRANCH: "edge", EXTRA_RELEASE: "k8s-1.28" }, skipCache: true }
          - { distro: armbian, id: "armbian-jammy-ddk-k8s-1.28", env: { RELEASE: "jammy", BRANCH: "ddk", EXTRA_RELEASE: "k8s-1.28" }, skipCache: true }
          - { distro: armbian, id: "armbian-noble-edge-k8s-1.28", env: { RELEASE: "noble", BRANCH: "edge", EXTRA_RELEASE: "k8s-1.28" }, skipCache: true }
          - { distro: armbian, id: "armbian-noble-ddk-k8s-1.28", env: { RELEASE: "noble", BRANCH: "ddk", EXTRA_RELEASE: "k8s-1.28" }, skipCache: true }
    env:
      BASE_OCI_REF: "ghcr.io/${{ github.repository_owner }}/"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #ROCKY_MIRROR: "https://rocky-linux-us-west1.production.gcp.mirrors.ctrliq.cloud/pub/rocky"
    name: "${{ matrix.id }} (${{ matrix.distro }})"
    
    steps:

      - name: Checkout build repo
        uses: actions/checkout@v4

      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # GitHub username or org
          password: ${{ secrets.GITHUB_TOKEN }}    # GitHub actions builtin token. repo has to have pkg access.

      - name: qemu-utils dep & modprobe nbd
        run: |
          sudo apt update
          sudo apt install qemu-utils pixz 
          sudo modprobe nbd max_part=8
          # pull skopeo image, so we can use it later faster
          docker pull quay.io/skopeo/stable:latest

      - name: setup python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          #cache: 'pip' # caching pip dependencies -- not useful, we're using venv

      - name: install pip deps
        run: |
          python3 -m venv .venv
          .venv/bin/pip install -r requirements.txt

      - name: Obtain info and template examples ${{matrix.id}}
        id: info
        env: ${{ matrix.env }}
        run: |
          .venv/bin/python info/cli.py ${{ matrix.distro }}

      - name: Commit changes to the examples directory
        run: |
          git config --global user.name "GHA workflow"
          git config --global user.email "workflow@github.com"
          git pull || true # repo might have changed since we started, avoid conflicts
          git add examples || true
          git commit -m "Update examples for ${{ matrix.id }}" || true
          git push || true
      
      # Two separate caching steps, since 2 qcow2 are too big to be cached together
      - name: Cache qcow2 arm64 - ${{ steps.info.outputs.qcow2-arm64 }}
        uses: actions/cache@v3
        if: ${{ (steps.info.outputs.uptodate == 'no') && ( ! (matrix.skipCache == true) ) }}
        with:
          path: ${{ steps.info.outputs.qcow2-arm64 }}
          key: ${{ steps.info.outputs.qcow2-arm64 }}
          restore-keys: ${{ steps.info.outputs.qcow2-arm64 }}

      - name: Cache qcow2 amd64 - ${{ steps.info.outputs.qcow2-amd64 }}
        uses: actions/cache@v3
        if: ${{ (steps.info.outputs.uptodate == 'no') && ( ! (matrix.skipCache == true) ) }}
        with:
          path: ${{ steps.info.outputs.qcow2-amd64 }}
          key: ${{ steps.info.outputs.qcow2-amd64 }}
          restore-keys: ${{ steps.info.outputs.qcow2-amd64 }}

      - name: Actually process ${{matrix.id}}
        id: magic
        if: ${{ (steps.info.outputs.uptodate == 'no') }}
        env: ${{ matrix.env }}
        run: |
          DO_DOWNLOAD_QCOW2=yes DO_EXTRACT_KERNEL=yes DO_DOCKER_BUILD=yes DO_DOCKER_PUSH=yes \
            sudo --preserve-env .venv/bin/python info/cli.py ${{ matrix.distro }}

      - name: Fix permissions after sudo'ed run
        run: |
          sudo --preserve-env chown -R $USER:$USER . || true

  release:
    needs: [ build ] # depend on the previous jobs...
    if: "${{ !cancelled() }}" # ... but run even if (some of) them failed, but not if job was cancelled
    runs-on: ubuntu-latest
    steps:
      - name: List current dir
        run: |
          ls -lahtR
