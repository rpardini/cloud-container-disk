---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: armbian-bookworm-k8s-1.28-ddk-amd64-kernelboot-ephemeral # Kernel boot, can control kernel cmdline, ephemeral ESP/rootfs disk
spec:
  running: false # this defines the VM as stopped, you need to start it manually with virtctl
  template:
    metadata:
      labels:
        kubevirt.io/vm: armbian-bookworm-k8s-1.28-ddk-amd64-kernelboot-ephemeral
        app.kubernetes.io/name: VM_armbian-bookworm-k8s-1.28-ddk-amd64-kernelboot-ephemeral # For Hubble & others
    spec:
      architecture: amd64
      nodeSelector:
        kubernetes.io/arch: amd64
      domain:
        machine:
          type: q35 # for amd64
        chassis:
          serial: pardini-chassis-serial
          asset: pardini-chassis-asset
          sku: pardini-chassis-sku
          version: pardini-chassis-version
          manufacturer: "pardini-chassis-manufacturer"
        firmware:
          # kexec/DirectKernel/kernelBoot: boots kernel directly, no grub, cmdline is set here #
          kernelBoot:
            container:
              # note: version must match the modules which are in the rootfs containerDisk
              image: ghcr.io/rpardini/containerdisk/armbian-cloud-kernel-kv:bookworm-k8s-1.28-ddk-24.03.10-armsurvivors-15 # Or: ghcr.io/rpardini/containerdisk/armbian-cloud-kernel-kv:bookworm-k8s-1.28-ddk-latest
              imagePullPolicy: IfNotPresent # or:  Always # if using "latest" above
              initrdPath: /boot/initrd
              kernelPath: /boot/vmlinuz
            kernelArgs: root=PARTLABEL=rootfs ro console=ttyS0 earlyprintk=ttyS0 consoleblank=0 loglevel=7 direct-kernel-boot=yes
        cpu:
          cores: 4
        devices:
          autoattachGraphicsDevice: false # no graphics, thanks
          disks:
            - disk:
                bus: virtio
              name: containerdisk
              serial: containerdiskserial
            - disk:
                bus: virtio
              name: cloudinitdisk
              serial: cloudinitdiskserial
            - name: emptydisk
              serial: emptydiskserial
              disk:
                bus: virtio
          interfaces:
            - masquerade: { }
              name: default
          rng: { }
        resources:
          requests:
            memory: 4G
      networks:
        - name: default
          pod: { }
      terminationGracePeriodSeconds: 0
      volumes:
        - containerDisk: # this is an OCI image that has a disk/xxx.qcow2 inside. it is ephemeral, but rw
            image: ghcr.io/rpardini/containerdisk/armbian-cloud-container-disk:bookworm-k8s-1.28-ddk-24.03.10-armsurvivors-15 # Or: ghcr.io/rpardini/containerdisk/armbian-cloud-container-disk:bookworm-k8s-1.28-ddk-latest
            imagePullPolicy: IfNotPresent # or: Always # if you use "latest" above
          name: containerdisk
        - cloudInitNoCloud: # auto create .ISOs for us, thanks.
            userData: |-
              #include https://cloud-init.pardini.net/rpardini/oldskool-rpardini/master/armbian-bookworm-k8s-1.28-ddk_kubevirt_amd64
          name: cloudinitdisk
        - name: emptydisk # throwaway disk, does not persist.
          emptyDisk:
            capacity: 2Gi