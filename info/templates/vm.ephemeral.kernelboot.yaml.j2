---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: {{ vm }} # {{  description }}
spec:
  runStrategy: Manual # you need to start it manually with virtctl
  template:
    metadata:
      labels:
        kubevirt.io/vm: {{ vm }}
        app.kubernetes.io/name: VM_{{ vm }} # For Hubble & others
    spec:
      architecture: {{ arch.docker_slug }}
      nodeSelector:
        kubernetes.io/arch: {{ arch.docker_slug }}
      domain:
        machine:
          type: {{ arch.qemu_machine_type }} # for {{ arch.docker_slug }}
        chassis:
          serial: pardini-chassis-serial
          asset: pardini-chassis-asset
          sku: pardini-chassis-sku
          version: pardini-chassis-version
          manufacturer: "pardini-chassis-manufacturer"
        firmware:
          # kexec/DirectKernel/kernelBoot: boots kernel directly, no grub, cmdline is set here #
          kernelBoot:
            container:
              # note: version must match the modules which are in the rootfs containerDisk
              image: {{ kernel.full_ref_version }} # Or: {{ kernel.full_ref_latest }}
              imagePullPolicy: IfNotPresent # or:  Always # if using "latest" above
              initrdPath: /boot/initrd
              kernelPath: /boot/vmlinuz
            kernelArgs: {{ kernel_cmdline }}
        cpu:
          cores: 4
        devices:
          autoattachGraphicsDevice: false # no graphics, thanks
          disks:
            - disk:
                bus: virtio
              name: containerdisk
              serial: containerdiskserial
            - disk:
                bus: virtio
              name: cloudinitdisk
              serial: cloudinitdiskserial
            - name: emptydisk
              serial: emptydiskserial
              disk:
                bus: virtio
          interfaces:
            - masquerade: { }
              name: default
          rng: { }
        resources:
          requests:
            memory: 4G
      networks:
        - name: default
          pod: { }
      terminationGracePeriodSeconds: 0
      volumes:
        - containerDisk: # this is an OCI image that has a disk/xxx.qcow2 inside. it is ephemeral, but rw
            image: {{ disk.full_ref_version }} # Or: {{ disk.full_ref_latest }}
            imagePullPolicy: IfNotPresent # or: Always # if you use "latest" above
          name: containerdisk
        - cloudInitNoCloud: # auto create .ISOs for us, thanks.
            userData: |-
              #include https://cloud-init.pardini.net/rpardini/oldskool-rpardini/master/{{ slug }}_kubevirt_{{ arch.docker_slug }}
          name: cloudinitdisk
        - name: emptydisk # throwaway disk, does not persist.
          emptyDisk:
            capacity: 2Gi
